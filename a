var2res                 =  Ngl.Resources()
var2res.nglDraw         =  False #-- don't draw plot
var2res.nglFrame        =  False

var2res.cnFillOn        =  True
var2res.cnFillMode      = 'AreaFill' #cell filling typ5
# var2res.cnLineLabelsOn = False
# var2res.cnFillMode = not necessary
var2res.cnLevelFlags = 'LineAndLabel'
var2res.cnLinesOn = True
var2res.cnLineThicknessF = 4.5
var2res.cnLineColor = 'chocolate3'
var2res.cnLineLabelBackgroundColor = -1
var2res.cnLineLabelFontColor = 'chocolate3'
var2res.cnLineLabelsOn = True
var2res.cnLineLabelFontHeightF = 0.006
var2res.cnInfoLabelOn = False
# var2res.cnConstFEnableFill = False
# var2res.cnConstFLabelOn = False
# var2res.cnSmoothingOn = True
# var2res.cnSmoothingDistanceF = 0.00125

# var2res.cnLineLabelInterval = 1

var2res.pmLabelBarDisplayMode = 'Never'
# var2res.cnFillPalette    = 'BlAqGrYeOrRe' #-- set the0 colormap to be used or 'NCL_default'

cmap_colors = Ngl.read_colormap_file("GMT_wysiwygcont")
cmap_colors = cmap_colors[:-12]
# cmap = np.delete(cmap, [1,5,11], axis=0)
# cmap_colors = np.insert(cmap_colors, 0, [0,0,0,0], axis=0)
# cmap = np.insert(cmap, 10, [0,0,0,0], axis=0)

# cmap_colors[1:6] + martin_colors[5:9]

# cmap_martin = ("(/0,0,0/)",
#                 "(/0,0,.2/)", "(/0,0,.4/)", "(/0,0,.6/)", "(/0,0,.8/)", "(/0,0,1/)",\
#                 "(/0,.3,1/)", "(/0,.45,1/)", "(/0,.6,1/)", "(/0,.8,1/)", "(/0,1,1/)",\
#                 "(/0,1,.85/)", "(/0,1,.7/)", "(/0,1,.4/)", "(/.4,1,.2/)", "(/.8,1,.4/)",\
#                 "(/1,1,.65/)", "(/1,1,.55/)", "(/1,1,.4/)", "(/1,1,.2/)", "(/1,1,0/)",\
#                 "(/1,.8,.2/)", "(/1,.7,0/)", "(/1,.6,0/)", "(/1,.4,.05/)", "(/1,.3,.1/)",\
#                 "(/1,0,0/)", "(/.85,0,0/)", "(/0.7,0,0/)", "(/.55,0,0/)", "(/.4,0,0/)",\
#                 "(/.25,0,0/)") #(R, G, B) Values
    

var2res.cnFillPalette    = cmap_colors #-- set the0 colormap to be used or 'NCL_default'

var2res.cnLevelSelectionMode = "ManualLevels"
# var2res.cnLevels             = [0.001, 0.2, 0.5, 1, 2, 5, 10, 20, 50, 100]
var2res.cnMinLevelValF       = -30
var2res.cnMaxLevelValF       = 30
var2res.cnLevelSpacingF      = 2 
var2res.cnFillOpacityF       = 0.99
var2res.cnNoDataLabelString  = 'No Variable Data'
var2res.cnConstFLabelString  = 'No Variable Data'

var2res.lbOrientation            = "horizontal" #-- horizontal labelbar
var2res.lbTitleString            = '~F34~0~F~C' #f1.variables[list(f1.variables.items())[0][0]].units
var2res.pmLabelBarOrthogonalPosF = -0.05
# var2res.pmLabelBarParallelPosF   = 0.25 #-- move labelbar upward
var2res.lbLabelFontHeightF       = 0.008 #-- labelbar labe font size
var2res.lbBoxMinorExtentF        = 0.12 #-- decrease height of
# var2res.lbBoxLinesOn             = True 
var2res.lbTitleFontHeightF       = 0.008 #label title font height
var2res.lbTitleOffsetF           = -0.40 #title distance from the label
var2res.lbBoxEndCapStyle         = "TriangleBothEnds"
# var2res.lbLabelStride = 5

# var2res.lbPerimOn = True
# var2res.lbPerimFill = 'SolidFill'
# var2res.lbPerimFillColor = np.array([0,0,0,0.83])
# var2res.lbLabelOffsetF = 0.08

var2res.sfXArray = lon1 # processing of longitudes arrays
var2res.sfYArray = lat1 # processing of latitudes arrays
